name: Docs Production Deployment
on:
    push:
        branches:
            - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
    publish:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            deployments: write
        name: Publish to Cloudflare Pages
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                submodules: 'recursive'
        
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        
            - name: Cache Node dependencies
              uses: actions/cache@v4
              id: yarn-cache
              with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                    ${{ runner.os }}-yarn-
            
            - name: Cache Next Build
              uses: actions/cache@v4
              with:
                path: |
                    ${{ steps.yarn-cache-dir-path.outputs.dir }}
                    ${{ github.workspace }}/.next/cache
                key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
                restore-keys: |
                    ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
                
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: 20
        
            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Build Site
              run: yarn run build

            - name: Deploy to Cloudflare Pages
              uses: AdrianGonz97/refined-cf-pages-action@v1
              with:
                  apiToken: ${{ secrets.CF_API_TOKEN }}
                  accountId: ${{ secrets.CF_ACCOUNT_ID }}
                  githubToken: ${{ secrets.GITHUB_TOKEN }}
                  projectName: ${{ vars.CF_PROJECT_NAME }}
                  directory: out
                  deploymentName: Production